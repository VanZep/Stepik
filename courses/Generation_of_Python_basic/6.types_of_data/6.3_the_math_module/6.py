"""
Даны три действительных числа a, b, c. Напишите программу, которая находит
действительные корни квадратного уравнения:
ax**2+bx+c=0

Если уравнение имеет один корень, то нужно вывести его, а если уравнение имеет
два корня, то следует вывести их в порядке возрастания, каждый на отдельной
строке. При этом если уравнение не имеет действительных корней, то программа
должна вывести текст «Нет корней» (без кавычек).

Формат входных данных
На вход программе подаются три действительных числа a≠0, b, c, каждое на
отдельной строке.

Формат выходных данных
Программа должна вывести действительные числа – корни уравнения, – каждый на
отдельной строке, если они существуют, или текст «Нет корней» (без кавычек) в
противном случае.

Примечание. Количество действительных корней квадратного уравнения
определяется дискриминантном, который вычисляется по следующей формуле:
D=b**2−4ac

если D<0, то уравнение не имеет действительных корней

если D=0, то уравнение имеет один действительный корень, который вычисляется
по следующей формуле:
x=−b/2a

если D>0, уравнение имеет два действительных корня, которые вычисляются по
следующим формулам:
x1=(-b−D**0.5)/2a, x2=(-b+D**0.5)/2a

Тестовые данные

Sample Input 1:
1
2
1

Sample Output 1:
-1.0

Sample Input 2:
1
-7.5
3

Sample Output 2:
0.4239663260874824
7.076033673912518
"""

'''
-5.64671390542564
7.90460919676605
-2.10960556210672

0.358897
1.04096
'''

from math import sqrt

a, b, c = float(input()), float(input()), float(input())

D = b ** 2 - 4 * a * c

if D > 0:
    sqrt_D = sqrt(D)
    x1 = (-b - sqrt_D) / (2 * a)
    x2 = (-b + sqrt_D) / (2 * a)
    if x1 > x2:
        x1, x2 = x2, x1
    print(x1, x2, sep='\n')
elif D == 0:
    print(-b / (2 * a))
else:
    print('Нет корней')
