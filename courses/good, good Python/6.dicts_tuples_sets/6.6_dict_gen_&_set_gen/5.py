"""
На вход программе подаются строки с информацией по книгам некоторого книжного
магазина в формате:
<автор 1>: <название 1>
...
<автор N>: <название N>

Авторы с названиями могут повторяться. Также в программе уже реализовано
чтение этих строк и сохранение в списке:
lst_in = list(map(str.strip, sys.stdin.readlines()))
lst_in = [
    'Пушкин: Сказка о рыбаке и рыбке',
    'Есенин: Письмо к женщине',
    'Тургенев: Муму',
    'Пушкин: Евгений Онегин',
    'Есенин: Русь'
]

Необходимо, используя генераторы, сформировать словарь с именем d вида:
{'автор 1': {'название 1', 'название 2', ..., 'название M'}, ...,
'автор K': {'название 1', 'название 2', ..., 'название S'}}

То есть, ключами выступают уникальные авторы, а значениями - множества
с уникальными названиями книг соответствующего автора.

На экран ничего выводить не нужно, только сформировать словарь обязательно
с именем d - он, далее будет проверяться в тестах!

Sample Input:
Пушкин: Сказка о рыбаке и рыбке
Есенин: Письмо к женщине
Тургенев: Муму
Пушкин: Евгений Онегин
Есенин: Русь
"""

lst_in = [
    'Пушкин: Сказка о рыбаке и рыбке',
    'Есенин: Письмо к женщине',
    'Тургенев: Муму',
    'Пушкин: Евгений Онегин',
    'Есенин: Русь'
]


def func():
    """Решение."""
    d = {
        i.split(':')[0]: {
            j.split(': ')[1] for j in lst_in if j.split()[0] == i.split()[0]
        } for i in lst_in
    }
    print(d)


if __name__ == '__main__':
    func()
