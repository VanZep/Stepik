"""
Объявите в программе функцию с именем get_sum следующей сигнатуры:
def get_sum(it): ...

Функция принимает на входе итерируемый объект (список, строку, кортеж,
словарь, множество) и вычисляет сумму только целых чисел, взятых из
элементов итерируемого объекта. Вычисленная сумма возвращается функцией.
Если целых чисел нет, то возвращается 0.

Примеры входного аргумента функции:
get_sum([1,2,3, "a", True, [4, 5], "c", (4, 5)])
get_sum({5, 6, 7, '8', 5, '4'})
get_sum((10, "f", '33', True, 12))
get_sum(['1', True, False, (1, 23)])
Подсказка: не забудьте про необходимость различения булевых значений
(False, True) от целочисленных.
"""


def get_sum_1(it):
    """Вычисляет сумму только целых чисел,
    взятых из элементов итерируемого объекта.
    1-ое решение.
    """
    summ = 0
    for el in it:
        if type(el) is int:
            summ += el

    return summ


def get_sum_2(it):
    """Вычисляет сумму только целых чисел,
    взятых из элементов итерируемого объекта.
    2-ое решение.
    """
    return sum(filter(lambda x: type(x) is int, it))


print(get_sum_1([1, 2, 3, "a", True, [4, 5], "c", (4, 5)]))
print(get_sum_1({5, 6, 7, '8', 5, '4'}))
print(get_sum_1((10, "f", '33', True, 12)))
print(get_sum_1(['1', True, False, (1, 23)]))
print('-' * 10)
print(get_sum_2([1, 2, 3, "a", True, [4, 5], "c", (4, 5)]))
print(get_sum_2({5, 6, 7, '8', 5, '4'}))
print(get_sum_2((10, "f", '33', True, 12)))
print(get_sum_2(['1', True, False, (1, 23)]))
