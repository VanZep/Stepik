"""
На вход программе поступают целые положительные числа. Необходимо с помощью
цикла реализовать их считывание, пока не встретится число 0. В теле цикла
для каждого прочитанного числа вычисляется квадратный корень
(с точностью до сотых) и значение выводится на экран (в столбик).
С помощью словаря выполните кэширование данных так, чтобы при повторном
вводе того же самого числа результат не вычислялся, а бралось ранее
вычисленное значение (из словаря). При этом на экране должно выводиться:

значение из кэша: <число>

Sample Input:
1
2
3
3
2
4
0

Sample Output:
1.0
1.41
1.73
значение из кэша: 1.73
значение из кэша: 1.41
2.0
"""

import sys

lst_in = list(map(int, sys.stdin.readlines()))
# lst_in = [1, 2, 3, 3, 2, 4, 0]


def func_1():
    """1-ое решение."""
    d = {}
    for n in lst_in:
        if not n == 0:
            if n in d:
                print('значение из кэша:', d[n])
            else:
                sqrt_root = round(n ** 0.5, 2)
                d[n] = sqrt_root
                print(sqrt_root)
        else:
            break


def func_2():
    """2-ое решение."""
    d = {}
    for n in iter(input, '0'):
        if d.get(n):
            print('значение из кэша:', end=' ')
        else:
            d[n] = round(int(n) ** 0.5, 2)
        print(d[n])


if __name__ == '__main__':
    func_1()
    func_2()
