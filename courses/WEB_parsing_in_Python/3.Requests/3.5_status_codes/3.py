"""
Вашей задачей является создание Python-скрипта, который будет выполнять
сетевые запросы к указанным изображениям и определять размер каждого файла без
его скачивания. Задача заключается в определении самого большого изображения
по размеру.

Исходные данные:
name_img = [
    '1663231240183817644.jpg',
    '1663231245165469794.jpg',
    '1663231252148267596.jpg',
    '16632460271311817.jpg',
    '1663260860165832550.jpg',
    '1663260862112644405.jpg',
    '1663260864114071369.jpg',
    '1663260869127473152.jpg',
    '1663260874115452216.jpg',
    '1663260877136512181.jpg',
    '1663260878140464277.jpg',
    '1663267600193799276.jpg',
    '1663267613117130673.jpg',
    '1663267619197170483.jpg',
    '1663267626154597739.jpg',
    '1663267648135114690.jpg',
    '166326765416196421.jpg',
    '1663267662118079649.jpg',
    '1663267668165066872.jpg',
    '1663267878176341940.jpg',
    '166326990115068678.jpg',
    '1663269922185881885.jpg',
    '1663269927127433209.jpg',
    '1663269942143420441.jpg',
    '1663269946174943071.jpg',
    '1663269964195277579.jpg',
    '1663269970148058649.jpg',
    '1663269974197750992.jpg',
    '166326997917397750.jpg',
    '1663270039138442380.jpg',
    '1663388012194470737.jpg',
    '166342371029995280.jpg',
    '1663423712288242036.jpg',
    '1663423715255612089.jpg',
    '1663423720221155166.jpg',
    '1663423722211139858.jpg',
    '1663423724211218483.jpg',
    '1663423728215479371.jpg',
    '1663423729298828299.jpg',
    '1663423732225964403.jpg',
    '1663424198111663025.jpg',
    '1663424199157537861.jpg',
    '1663424200184778832.jpg',
    '166342420214123494.jpg',
    '166342420317539591.jpg',
    '1663424204161674559.jpg',
    '1663424206188873432.jpg',
    '166342420813193185.jpg',
    '1663424209187179962.jpg',
    '1663424212162573102.jpg'
]

Домен, к которому нужно конкатенировать имена файлов:
https://parsinger.ru/3.3/3/img/

Задание:
Конкатенируйте имена файлов с доменом, чтобы получить полный URL каждого
изображения.
Выполните HTTP запрос к каждому изображению.
Используя заголовок Content-Length из ответа сервера
(response.headers.get('Content-Length')), определите размер каждого файла.
Найдите изображение с наибольшим размером.

Ожидаемый результат:
В качестве результата вы должны выводить URL изображения с наибольшим размером.
В поле ответа укажите имя файла этого изображения без расширения, только число
(1000000000000009).
"""

import requests

URL = 'https://parsinger.ru/3.3/3/img/'
name_img = [
    '1663231240183817644.jpg',
    '1663231245165469794.jpg',
    '1663231252148267596.jpg',
    '16632460271311817.jpg',
    '1663260860165832550.jpg',
    '1663260862112644405.jpg',
    '1663260864114071369.jpg',
    '1663260869127473152.jpg',
    '1663260874115452216.jpg',
    '1663260877136512181.jpg',
    '1663260878140464277.jpg',
    '1663267600193799276.jpg',
    '1663267613117130673.jpg',
    '1663267619197170483.jpg',
    '1663267626154597739.jpg',
    '1663267648135114690.jpg',
    '166326765416196421.jpg',
    '1663267662118079649.jpg',
    '1663267668165066872.jpg',
    '1663267878176341940.jpg',
    '166326990115068678.jpg',
    '1663269922185881885.jpg',
    '1663269927127433209.jpg',
    '1663269942143420441.jpg',
    '1663269946174943071.jpg',
    '1663269964195277579.jpg',
    '1663269970148058649.jpg',
    '1663269974197750992.jpg',
    '166326997917397750.jpg',
    '1663270039138442380.jpg',
    '1663388012194470737.jpg',
    '166342371029995280.jpg',
    '1663423712288242036.jpg',
    '1663423715255612089.jpg',
    '1663423720221155166.jpg',
    '1663423722211139858.jpg',
    '1663423724211218483.jpg',
    '1663423728215479371.jpg',
    '1663423729298828299.jpg',
    '1663423732225964403.jpg',
    '1663424198111663025.jpg',
    '1663424199157537861.jpg',
    '1663424200184778832.jpg',
    '166342420214123494.jpg',
    '166342420317539591.jpg',
    '1663424204161674559.jpg',
    '1663424206188873432.jpg',
    '166342420813193185.jpg',
    '1663424209187179962.jpg',
    '1663424212162573102.jpg'
]

with requests.Session() as session:
    max_size = 0
    index_img = 0
    for i, img in enumerate(name_img):
        try:
            response = session.get(url=URL + img, timeout=0.1)
        except requests.Timeout:
            print(f'Слишком долгое ожидание! Изображение {img}')
        except requests.RequestException as e:
            print(f'Произошла ошибка: {e}')
        content_size = int(response.headers.get('Content-Length'))
        if content_size > max_size:
            index_img = i
            max_size = content_size

print(
    'Изображение с наибольшим размером.',
    f'url: {name_img[index_img].rstrip(".jpg")}',
    f'размер: {max_size}',
    f'индекс: {index_img}',
    sep='\n'
)
