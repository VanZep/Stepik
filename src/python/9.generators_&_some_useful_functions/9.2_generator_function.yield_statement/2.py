"""
Мы с вами в заданиях несколько раз генерировали последовательность чисел
Фибоначчи, которая строится по правилу: каждое последующее число равно сумме
двух предыдущих. Для разнообразия давайте будем генерировать каждое
последующее как сумму трех предыдущих чисел. При этом первые три числа равны 1.
Получаем такую последовательность:
1, 1, 1, 3, 5, 9, 17, 31, 57, ...

Не знаю, есть ли у нее название, поэтому, в рамках уроков, я скромно назову ее
последовательностью Балакирева.

Итак, на вход программе поступает натуральное число N (N > 5), которое
необходимо прочитать и сохранить в переменной. Затем (или в начале программы),
объявить функцию-генератор с сигнатурой:
def balak_seq(max_len): ...
которая бы возвращала max_len = N первых чисел последовательности Балакирева
(включая первые три единицы).

Реализуйте эту функцию без использования коллекций (списков, кортежей,
словарей и т.п.). Вызовите ее N раз для получения N чисел и выведите
полученные числа на экран в одну строчку через пробел.

Sample Input:
7
0 1 2 3 4 5 6 7 8 9

Sample Output:
1 1 1 3 5 9 17
"""


def balak_seq_1(max_len):
    """Функция последовательности Балакирева.
    1-ое решение."""
    a, b, c, num = 1, 1, 1, 1
    for i in range(1, max_len + 1):
        if i > 3:
            num += a + b
            a, b, c = b, c, num
        yield num


def balak_seq_2(max_len):
    """Функция последовательности Балакирева.
    2-ое решение."""
    a, b, c = 1, 1, 1
    for _ in range(max_len):
        yield a
        a, b, c = b, c, a + b + c


if __name__ == '__main__':
    N = int(input())
    gen = balak_seq_1(N)
    print(*(next(gen) for _ in range(N)))
    gen = balak_seq_2(N)
    print(*(next(gen) for _ in range(N)))
